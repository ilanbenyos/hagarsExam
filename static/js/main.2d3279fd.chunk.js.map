{"version":3,"sources":["store/reducers.js","store/middleware.js","store/store.js","compenents/views/game/gameForm.js","compenents/views/game/board.js","compenents/views/game/game.js","store/actions.js","compenents/list.js","compenents/form.js","compenents/views/home.js","compenents/views/about.js","compenents/views/contact.js","app/App.js","index.js"],"names":["initialState","articles","userName","board","score","rootReducer","state","arguments","length","undefined","action","type","Object","assign","concat","payload","objectSpread","scoreToAdd","newBoard","forbiddenWords","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","_ref","dispatch","next","filter","word","title","includes","thunk","gameForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","answer","target","value","handleAnswer","preventDefault","_this$props","currSelectedGroups","totalRight","totalWrong","react_default","a","createElement","className","map","item","idx","key","onSubmit","onChange","React","Component","imgSrc","_this2","y","yIdx","x","xIdx","isSelected","isLonely","answerStatus","onClick","src","srcIdx","alt","connectedGame","currSelectedGroup","userInput","_","cloneDeep","chosenSquares","reduce","acc","curr","correctRes","obj","addScore","forEach","row","sq","setBoard","clicked","markGroup","markedGroups","xLen","yLen","maxNum","totalSquares","nextStage","refreshStage","initBoard","_this3","min","max","Math","floor","random","getRandomArbitrary","initSquare","markLonely","_this4","arr","getNeighbours","sqr","some","_this5","square","push","filterSimilar","markNeighbours","toConsumableArray","neighbours","tempX","tempY","o","res","_this$state","game_board","game_gameForm","Game","connect","List","el","id","ConnectedForm","defineProperty","handleSubmit","uuidv1","addArticle","submitUserName","setUserName","_this$state2","htmlFor","Form","article","ConnectedHome","pictureId","label","list","compenents_form","Home","About","Contact","toggleShow","isShow","toggleGender","user","name","gender","pushToStr","searchParams","queryString","parse","location","search","text","foo","match","params","txt2","App","handleChildClick","childText","pop","txt","childText2","react_router_dom","to","pathname","react_router","routeProps","home","exact","path","render","game","contact","component","es","src_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.2d3279fd.chunk.js","sourcesContent":["const initialState = {\r\n    articles: [],\r\n    userName:'',\r\n    board:null,\r\n    score:0,\r\n};\r\nfunction rootReducer(state = initialState, action) {\r\n    if (action.type === 'ADD_ARTICLE') {\r\n        return Object.assign({}, state, {\r\n            articles: state.articles.concat(action.payload)\r\n        })\r\n    }\r\n    if (action.type === 'setUserName') {\r\n        return {...state, userName:action.payload}\r\n    }\r\n    if (action.type === 'addScore') {\r\n      return {...state,score:state.score + action.scoreToAdd}\r\n    }\r\n  if (action.type === 'setBoard') {\r\n    return {...state, board:action.newBoard}\r\n  }\r\n    return state;\r\n}\r\nexport default rootReducer;\r\n","\r\nconst forbiddenWords = [\"spam\", \"money\"];\r\nexport function forbiddenWordsMiddleware({ dispatch }) {\r\n    return function(next) {\r\n        return function(action) {\r\n            // do your stuff\r\n            if (action.type === 'ADD_ARTICLE') {\r\n\r\n                const foundWord = forbiddenWords.filter(word =>\r\n                    action.payload.title.includes(word)\r\n                );\r\n                if (foundWord.length) {\r\n                    return dispatch({ type: \"FOUND_BAD_WORD\" });\r\n                }\r\n            }\r\n            return next(action);\r\n        };\r\n    };\r\n}\r\n","import { createStore, applyMiddleware, compose , combineReducers } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { forbiddenWordsMiddleware } from \"./middleware\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    storeEnhancers(applyMiddleware(forbiddenWordsMiddleware, thunk))\r\n);\r\nexport default store;\r\n","import React from 'react'\r\n\r\nclass gameForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          answer:'',\r\n        };\r\n    }\r\n  handleChange=(event)=> {\r\n    this.setState({ answer: event.target.value });\r\n  };\r\n  handleAnswer=(event)=> {\r\n    event.preventDefault();\r\n    const { answer } = this.state;\r\n    this.props.handleAnswer(answer);\r\n    this.setState({\r\n      answer:'',\r\n    });\r\n  };\r\n  render() {\r\n    const { answer } = this.state;\r\n    const { currSelectedGroups, totalRight,totalWrong} = this.props;\r\n\r\n    return(\r\n\r\n    <div className=\"game-form border border-primary mt-3\">\r\n      {currSelectedGroups ?\r\n        <div>\r\n          <div className=\"d-flex flex-row\">\r\n              <div className=\"total bg-success h3 p-1 border rounded\">{totalRight}{currSelectedGroups.length > 0 ?'+':null } </div>\r\n            {currSelectedGroups.map((item, idx) =>\r\n              <div className=\"item h3 p-1 border rounded\"\r\n                 key={idx}>{item.length}{idx === currSelectedGroups.length-1 ? '':'+' }\r\n               </div>\r\n            )}\r\n            {totalWrong ?\r\n              <div className=\"total-wrong ml-auto bg-danger h3 p-1 border rounded \">{totalWrong } </div>\r\n            :null}\r\n          </div>\r\n\r\n        </div>\r\n        :\r\n        <div>no data</div>\r\n      }\r\n          <form onSubmit={this.handleAnswer} className=\"d-flex flex-column justify-content-center mx-4\">\r\n            <div className=\"form-group d-flex justify-content-center\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={answer}\r\n                onChange={this.handleChange}\r\n              />\r\n              {/*<div className=\"input-group-append\" onClick={this.handleAnswer}>*/}\r\n                {/*<span className=\"input-group-text\" id=\"basic-addon2\">שלח!</span>*/}\r\n              {/*</div>*/}\r\n              <button type=\"submit\" className=\"btn btn-success input-group-append\">\r\n                <span className=\"input-group-text\">שלח!</span>\r\n              </button>\r\n            </div>\r\n\r\n          </form>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default gameForm\r\n","import React from 'react'\r\n\r\nclass board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          imgSrc:[\r\n            'https://cdn1.iconfinder.com/data/icons/angry-icons-by-femfoyou/512/whitebird.png',\r\n            'http://icons.iconarchive.com/icons/femfoyou/angry-birds/256/angry-bird-blue-icon.png',\r\n            'http://icons.iconarchive.com/icons/femfoyou/angry-birds/128/angry-bird-yellow-icon.png',\r\n            'https://i0.wp.com/gallery.yopriceville.com/var/albums/Free-Clipart-Pictures/Cartoons-PNG/Red%20Bird%20The%20Angry%20Birds%20Movie%20PNG%20Transparent%20Image.png?m=1462570648',\r\n            'http://icons.iconarchive.com/icons/martin-berube/flat-animal/128/horse-icon.png',\r\n            'http://icons.iconarchive.com/icons/iconka/tailwaggers/128/dog-pug-icon.png',\r\n            'http://icons.iconarchive.com/icons/iconka/tailwaggers/128/dog-rich-icon.png',\r\n            'http://icons.iconarchive.com/icons/iconka/tailwaggers/128/dog-shepherd-icon.png',\r\n            'http://icons.iconarchive.com/icons/arrioch/birdie-adium/128/Adium-Bird-Awake-icon.png',\r\n            'http://icons.iconarchive.com/icons/we4ponx/angry-birds-star-wars/128/Angry-Birds-Star-Wars-2-icon.png',\r\n            'http://icons.iconarchive.com/icons/martin-berube/flat-animal/128/frog-icon.png',\r\n          ],\r\n        };\r\n    }\r\n  render() {\r\n    const { board } = this.props;\r\n\r\n    return(\r\n        <div className=\"board px-3\">\r\n          {board.map((y, yIdx) =>\r\n            <div className=\"row justify-content-center\" key={yIdx}>\r\n              {y.map((x, xIdx) =>\r\n                <div key={xIdx}\r\n                     className={\r\n                       `square rol-btn ${board[xIdx][yIdx].isSelected ?\r\n                         `selected selected-${board[xIdx][yIdx].isSelected}`:''}\r\n                         ${board[xIdx][yIdx].isLonely ? 'lonely':''}\r\n                         ${board[xIdx][yIdx].answerStatus}`\r\n                     }\r\n                     onClick={() => {\r\n                       this.props.onClick(xIdx, yIdx)\r\n                     }}>\r\n                  <img src={this.state.imgSrc[board[xIdx][yIdx].srcIdx]} alt=\"\"/>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default board\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {setBoard, addScore} from \"../../../store/actions\";\r\nimport _ from \"lodash\"\r\nimport GameForm from \"./gameForm\"\r\nimport Board from \"./board\"\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      score: state.score,\r\n      board: state.board,\r\n      userName: state.userName,\r\n    };\r\n};\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    addScore: scoreToAdd => dispatch(addScore(scoreToAdd)),\r\n    setBoard: newBoard => dispatch(setBoard(newBoard)),\r\n  };\r\n}\r\n\r\nclass connectedGame extends React.Component {\r\n  currSelectedGroup=[]\r\n\r\n  constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          markedGroups:[],\r\n          currSelectedGroups:[],\r\n          currSelectedGroup:[],\r\n          xLen:3,\r\n          yLen:3,\r\n          maxNum:3,\r\n          totalWrong:0,\r\n          totalRight:0,\r\n\r\n        };\r\n    }\r\n  handleAnswer=(userInput)=>{\r\n    let newBoard = _.cloneDeep(this.props.board);\r\n\r\n    let chosenSquares = this.state.currSelectedGroups.reduce((acc,curr)=>{\r\n      return acc+curr.length\r\n    },0);\r\n    let correctRes = chosenSquares + this.state.totalRight;\r\n    let obj={\r\n      isSelected:false,\r\n      answerStatus:'status-wrong'\r\n    };\r\n    if(correctRes === +userInput){\r\n      obj.answerStatus = 'status-right'\r\n      this.setState({\r\n        totalRight: correctRes,\r\n      });\r\n      this.props.addScore(chosenSquares);\r\n    }else{\r\n      this.setState({\r\n        totalWrong: this.state.totalWrong + chosenSquares,\r\n      });\r\n    }\r\n    this.state.currSelectedGroups.forEach((row)=>{\r\n      row.forEach((sq)=> {\r\n        newBoard[sq.x][sq.y] = {...sq,...obj}\r\n      })\r\n    });\r\n    this.props.setBoard({newBoard});\r\n    this.setState({\r\n      currSelectedGroups: [],\r\n    });\r\n\r\n  };\r\n  componentDidUpdate(){\r\n    let totalSquares = this.state.xLen * this.state.yLen\r\n    if(this.state.totalRight === totalSquares){\r\n      this.props.addScore(this.state.yLen);\r\n      this.nextStage()\r\n    }else if(this.state.totalWrong + this.state.totalRight === totalSquares){\r\n      this.refreshStage()\r\n    }\r\n  }\r\n  refreshStage(){\r\n    this.setState({\r\n      markedGroups:[],\r\n      currSelectedGroups:[],\r\n      currSelectedGroup:[],\r\n      totalWrong:0,\r\n      totalRight:0,\r\n    },()=>this.initBoard());\r\n  }\r\n  nextStage(){\r\n    this.setState({\r\n      yLen: this.state.yLen +1,\r\n      xLen: this.state.xLen +1,\r\n      maxNum: this.state.maxNum +1,\r\n      markedGroups:[],\r\n      currSelectedGroups:[],\r\n      currSelectedGroup:[],\r\n      totalWrong:0,\r\n      totalRight:0,\r\n    },()=>this.initBoard());\r\n  }\r\n  clicked=(x,y)=> {\r\n      this.markGroup(x,y)\r\n  };\r\n  getRandomArbitrary(min=0, max = this.state.maxNum) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n  }\r\n  initSquare(){\r\n      return {\r\n        srcIdx: this.getRandomArbitrary(),\r\n        isSelected:false,\r\n        answerStatus:'status-init',//'init'/false/true\r\n        isLonely:false,\r\n      }\r\n  }\r\n  initBoard(){\r\n    let newBoard = [];\r\n    for(let x = 0; x<this.state.xLen; x++){\r\n      newBoard[x]=[];\r\n      for(let y = 0;y<this.state.xLen; y++){\r\n        newBoard[x][y] = {...this.initSquare(),x,y}\r\n      }\r\n    }\r\n    newBoard = this.markLonely(newBoard);\r\n    this.props.setBoard({newBoard});\r\n  }\r\n  async componentDidMount(){\r\n   this.initBoard()\r\n  }\r\n  markLonely(newBoard){\r\n    newBoard.forEach((row,x)=> {\r\n      row.forEach((sq, y) => {\r\n        let arr = this.getNeighbours(x,y,newBoard)\r\n        let sqr = newBoard[x][y]\r\n        if (arr.some(sq => sq.srcIdx === sqr.srcIdx)) {\r\n          newBoard[x][y].isLonely = false;\r\n        }else{\r\n          let rand = this.getRandomArbitrary(0,arr.length-1)\r\n          let srcIdx = arr[rand].srcIdx\r\n          newBoard[x][y].srcIdx = srcIdx;\r\n        }\r\n      })\r\n    });\r\n    return newBoard\r\n  }\r\n  markNeighbours(x,y, board) {\r\n    const square = board[x][y];\r\n    if(square.isSelected)return;\r\n    board[x][y].isSelected = this.state.currSelectedGroups.length + 1;\r\n    let item = board[x][y]\r\n    this.currSelectedGroup.push(item)\r\n    let arr = this.getNeighbours(x, y, board);\r\n    let filtered = this.filterSimilar(square.srcIdx,arr);\r\n    filtered.forEach(sq=> {\r\n        this.markNeighbours(sq.x, sq.y, board)\r\n    })\r\n  }\r\n  filterSimilar(srcIdx,arr){\r\n    return arr.filter(item=> item.srcIdx === srcIdx)\r\n  }\r\n\r\n  markGroup(x,y){\r\n    let newBoard = _.cloneDeep(this.props.board);\r\n\r\n    this.markNeighbours(x,y,newBoard)\r\n    if(this.currSelectedGroup.length> 0) {\r\n      this.props.setBoard({newBoard});\r\n      this.setState({\r\n        currSelectedGroups: [...this.state.currSelectedGroups, this.currSelectedGroup],\r\n      });\r\n      this.currSelectedGroup = [];\r\n    }\r\n  }\r\n  getNeighbours(x,y, board = this.props.board){\r\n    let neighbours = []\r\n    for(let tempX= x-1;tempX <= x+1; tempX++) {\r\n      for (let tempY = y - 1; tempY <= y + 1; tempY ++) {\r\n        if (y === tempY && x === tempX) continue;//not the same square\r\n        if (tempY < 0 || tempY > this.state.xLen -1) continue;//not outside of board\r\n        if (tempX < 0 || tempX > this.state.yLen -1) continue;//not outside of board\r\n        let o = board[tempX][tempY];\r\n        let res = {\r\n          ...this.initSquare(),\r\n          y: tempY,\r\n          x: tempX,\r\n          srcIdx: o.srcIdx\r\n        };\r\n        neighbours.push(res)\r\n      }\r\n    }\r\n    return neighbours\r\n  }\r\n  render() {\r\n    const { currSelectedGroups, totalRight, totalWrong} = this.state;\r\n    const { board } = this.props;\r\n\r\n    return(\r\n      <div className=\"game mt-5\">\r\n        <div className=\"score d-inline-block h3 p-2 rounded bg-warning\">{this.props.score}</div>\r\n         {board && <Board onClick={this.clicked} board={board}/>}\r\n        {board && <GameForm handleAnswer={this.handleAnswer}\r\n                            totalWrong={totalWrong}\r\n                            totalRight={totalRight}\r\n          currSelectedGroups={currSelectedGroups}\r\n        />}\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\nconst Game = connect(mapStateToProps, mapDispatchToProps)(connectedGame);\r\n\r\nexport default Game\r\n","\r\nexport function addArticle(payload) {\r\n    return { type: 'ADD_ARTICLE', payload };\r\n}\r\nexport function addScore(scoreToAdd) {\r\n    return { type: 'addScore', scoreToAdd };\r\n}\r\nexport function setBoard({newBoard}) {\r\n    return { type: 'setBoard', newBoard };\r\n}\r\nexport function setUserName(payload) {\r\n    return { type: 'setUserName', payload };\r\n}\r\n\r\nexport function getData() {\r\n    return function(dispatch) {\r\n        return fetch(\"https://jsonplaceholder.typicode.com/posts\")\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                dispatch({ type: \"DATA_LOADED\", payload: json });\r\n            });\r\n    };\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst mapStateToProps = state => {\r\n    return { articles: state.articles };\r\n};\r\nconst ConnectedList = ({ articles }) => (\r\n    <ul className=\"list-group list-group-flush\">\r\n        {articles.map(el => (\r\n            <li className=\"list-group-item\" key={el.id}>\r\n                {el.title}\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\nconst List = connect(mapStateToProps)(ConnectedList);\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport uuidv1 from \"uuid\";\r\nimport { addArticle, setUserName } from \"../store/actions\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        setUserName: userName => dispatch(setUserName(userName)),\r\n        addArticle: article => dispatch(addArticle(article)),\r\n    };\r\n}\r\nclass ConnectedForm extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            userName:'',\r\n        };\r\n    }\r\n    handleChange=(event)=> {\r\n        this.setState({ [event.target.id]: event.target.value });\r\n    };\r\n    handleSubmit=(event)=> {\r\n        event.preventDefault();\r\n        const { title,userName } = this.state;\r\n        const id = uuidv1();\r\n        this.props.addArticle({ title, id });\r\n        this.setState({\r\n            title: \"\",\r\n        });\r\n    };\r\n    submitUserName=(event)=> {\r\n        event.preventDefault();\r\n        const { userName } = this.state;\r\n        this.props.setUserName(userName);\r\n        this.setState({\r\n            userName:'',\r\n        });\r\n    }\r\n    render() {\r\n        const { title, userName } = this.state;\r\n        return (\r\n            <div className=\"forms\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"title\"\r\n                        value={title}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success btn-lg\">\r\n                    SAVE\r\n                </button>\r\n            </form>\r\n            <form onSubmit={this.submitUserName}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"userName\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"userName\"\r\n                        value={userName}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-success btn-lg\">\r\n                    SAVE\r\n                </button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst Form = connect(null, mapDispatchToProps)(ConnectedForm);\r\nexport default Form;\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\";\r\n\r\nimport List from '../list'\r\nimport Form from \"../form\";\r\nconst mapStateToProps = state => {\r\n    return { userName: state.userName };\r\n};\r\n\r\nclass ConnectedHome extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pictureId: null,\r\n            label: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row mt-5\">\r\n                <div className=\"col-md-4 offset-md-1\">\r\n                    <h2>Home - {this.props.userName}</h2>\r\n                    <List />\r\n                </div>\r\n                <div className=\"col-md-4 offset-md-1\">\r\n                    <h2>Add a new article</h2>\r\n                    <Form />\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nconst Home = connect(mapStateToProps)(ConnectedHome);\r\n\r\nexport default Home\r\n","import React from 'react'\r\nclass About extends React.Component {\r\n    render() {\r\n        return <h1>About</h1>\r\n    }\r\n}\r\nexport default About\r\n","import React from 'react'\r\nimport queryString from 'query-string';\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pushToStr:'kkk',\r\n            searchParams: queryString.parse(this.props.location.search),\r\n            isShow: true,\r\n            user:{\r\n                name:'ilan',\r\n                gender:'male'\r\n            }\r\n        };\r\n    }\r\n\r\n    // pushMe = () => {\r\n    //     this.props.match.params.txt2 === 'kkk' ?'lll' :'kkk' ;\r\n    //     this.props.history.push({ pathname: `/contact/${ this.state.pushToStr}`,\r\n    //         search: '?foo=' + this.state.user.name\r\n    //     })\r\n    // };\r\n    toggleShow = () => {\r\n        this.setState(state => ({ isShow: !state.isShow }));\r\n    };\r\n    toggleGender = () => {\r\n        this.setState(state => state.user.name = state.user.name === 'ilan' ? 'noam':'ilan');\r\n        this.setState(state => state.user.gender = state.user.gender === 'male' ? 'female':'male');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <button onClick={this.toggleShow} type=\"button\">\r\n                Toggle Show\r\n            </button>\r\n            <button onClick={this.toggleGender} type=\"button\">\r\n                Toggle Gender\r\n            </button>\r\n            {/*<button onClick={this.pushMe}>={this.props.match.params.txt2}+++</button>;*/}\r\n            <button onClick={this.props.onClick}>{this.props.text}</button>;\r\n            {this.props.foo}\r\n            <div>name={this.state.user.name}=</div>\r\n            <div>gender={this.state.user.gender}=</div>\r\n            <div>txt2={this.props.match.params.txt2}=</div>\r\n            <div>searchParams={queryString.parse(this.props.location.search).foo}=</div>\r\n            {this.state.isShow ?  <h3 >show</h3> : <h3 >no show</h3>}\r\n        </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\nexport default Contact\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport Game from '../compenents/views/game/game';\r\nimport Home from '../compenents/views/home';\r\nimport About from '../compenents/views/about';\r\nimport Contact from '../compenents/views/contact';\r\nimport './App.scss';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            txt2: 'txt2',\r\n            pop:'popo',\r\n            txt: 'init',\r\n            childText2: 'rrr',\r\n            childText: 'init',\r\n            user:null,\r\n        };\r\n    }\r\n    handleChildClick = () => {\r\n        this.setState(state => ({ childText: state.childText === 'init'? 'no!!!':'init' }));\r\n    };\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"container\">\r\n                  <h2>111התרגיל של הגר</h2>\r\n\r\n                  <div className=\"navbar-nav mr-auto d-flex flex-row\">\r\n                        <Link to={'/'}className=\"nav-link mr-2\">Home</Link>\r\n                        <Link to={\r\n                            { pathname: `/contact/${ this.state.pop}`,\r\n                                search: '?foo=' + this.state.txt2\r\n                            }\r\n                        }className=\"nav-link mr-2\">Contact</Link>\r\n                        <Link to={'/game'} className=\"nav-link mr-2\">Game</Link>\r\n                        <Link to={'/about'} className=\"nav-link\">About</Link>\r\n                    </div>\r\n                    <hr />\r\n                    <Switch>\r\n                      path={`/`} exact render={(routeProps) => (\r\n                            <Home {...routeProps} foo=\"bar\"/>\r\n                        )}/>\r\n                        <Route exact path={`/game`} render={(routeProps) => (\r\n                            <Game {...routeProps}/>\r\n                        )}/>\r\n                        <Route\r\n                          path={`/contact/:txt2`}\r\n                            render={(routeProps) => (\r\n                                <Contact {...routeProps}\r\n                                         foo=\"bar\"\r\n                                         onClick={this.handleChildClick}\r\n                                         text={this.state.childText}/>\r\n                            )}\r\n                        />\r\n                        <Route path={`/about`} component={About} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport App from './app/App';\n\nrender(\n    <Provider store={store}>\n     <App />\n    </Provider>\n    , document.getElementById('app')\n);\n"],"sourceRoot":""}